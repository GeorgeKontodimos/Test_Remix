{
	"id": "592e99c471ae5debd9c1cf9ffc9d7f8d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Assemply-EVM-OpCodes.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >= 0.7.0 < 0.9.0;\r\n\r\n// Solidity provides an option to use assembly language \r\n// to write inline assembly within solidity source code.\r\n// Assembly is a low level language that allows you to \r\n// direct manipulate the EVM (more dangerous and not recommended)\r\n// EVM = smart contracts are not the real code in the blockchain,\r\n// solidity code is compiled to a loer level language.\r\n\r\ncontract LearnAssembly{\r\n    function addToEVM() pure external {\r\n        uint x;\r\n        uint y;\r\n        //uint z = x + y ;\r\n        // how do we use assembly?? (opcodes)\r\n        assembly {\r\n            // declares an assembly block\r\n            // inside we can manipulate variables declared outside\r\n            // no semi colon = is actually := and can bring in opcodes\r\n            // it sould be inside function\r\n            let z := add(x, y)\r\n            // we can run \"if\" \"functions\" \"for\"\r\n\r\n            // load data from a specific slot\r\n            let a := mload(0x40)\r\n\r\n            // store something temporarily to memory\r\n            mstore(a,4)\r\n\r\n            // persistance storage!\r\n            //sstore(a,100)\r\n        }\r\n        // In EVM everything is stored in slots of 256 bits (a uint occupies one slot)\r\n        // whereas mapping or array is several\r\n    }\r\n    function addToEVM2() public view returns (bool success){\r\n        uint size;\r\n        address addr;\r\n        // check whether an address contains any bytes of code or not\r\n        assembly {\r\n            size := extcodesize(addr)\r\n        }\r\n        return size>0;\r\n    }\r\n    \r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Assemply-EVM-OpCodes.sol": {
				"LearnAssembly": {
					"abi": [
						{
							"inputs": [],
							"name": "addToEVM",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "addToEVM2",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Assemply-EVM-OpCodes.sol\":435:1609  contract LearnAssembly{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Assemply-EVM-OpCodes.sol\":435:1609  contract LearnAssembly{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4fee737f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xdadf8fee\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Assemply-EVM-OpCodes.sol\":1329:1600  function addToEVM2() public view returns (bool success){\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Assemply-EVM-OpCodes.sol\":464:1323  function addToEVM() pure external {\r... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Assemply-EVM-OpCodes.sol\":1329:1600  function addToEVM2() public view returns (bool success){\r... */\n    tag_6:\n        /* \"Assemply-EVM-OpCodes.sol\":1371:1383  bool success */\n      0x00\n        /* \"Assemply-EVM-OpCodes.sol\":1395:1404  uint size */\n      dup1\n        /* \"Assemply-EVM-OpCodes.sol\":1415:1427  address addr */\n      0x00\n        /* \"Assemply-EVM-OpCodes.sol\":1553:1557  addr */\n      dup1\n        /* \"Assemply-EVM-OpCodes.sol\":1541:1558  extcodesize(addr) */\n      extcodesize\n        /* \"Assemply-EVM-OpCodes.sol\":1533:1558  size := extcodesize(addr) */\n      swap2\n      pop\n        /* \"Assemply-EVM-OpCodes.sol\":1591:1592  0 */\n      0x00\n        /* \"Assemply-EVM-OpCodes.sol\":1586:1590  size */\n      dup3\n        /* \"Assemply-EVM-OpCodes.sol\":1586:1592  size>0 */\n      gt\n        /* \"Assemply-EVM-OpCodes.sol\":1579:1592  return size>0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Assemply-EVM-OpCodes.sol\":1329:1600  function addToEVM2() public view returns (bool success){\r... */\n      swap1\n      jump\t// out\n        /* \"Assemply-EVM-OpCodes.sol\":464:1323  function addToEVM() pure external {\r... */\n    tag_10:\n        /* \"Assemply-EVM-OpCodes.sol\":509:515  uint x */\n      0x00\n        /* \"Assemply-EVM-OpCodes.sol\":526:532  uint y */\n      dup1\n        /* \"Assemply-EVM-OpCodes.sol\":885:886  y */\n      dup1\n        /* \"Assemply-EVM-OpCodes.sol\":882:883  x */\n      dup3\n        /* \"Assemply-EVM-OpCodes.sol\":878:887  add(x, y) */\n      add\n        /* \"Assemply-EVM-OpCodes.sol\":1015:1019  0x40 */\n      0x40\n        /* \"Assemply-EVM-OpCodes.sol\":1009:1020  mload(0x40) */\n      mload\n        /* \"Assemply-EVM-OpCodes.sol\":1099:1100  4 */\n      0x04\n        /* \"Assemply-EVM-OpCodes.sol\":1097:1098  a */\n      dup2\n        /* \"Assemply-EVM-OpCodes.sol\":1090:1101  mstore(a,4) */\n      mstore\n        /* \"Assemply-EVM-OpCodes.sol\":627:1180  {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"Assemply-EVM-OpCodes.sol\":464:1323  function addToEVM() pure external {\r... */\n      jump\t// out\n        /* \"#utility.yul\":7:116   */\n    tag_14:\n        /* \"#utility.yul\":88:109   */\n      tag_16\n        /* \"#utility.yul\":103:108   */\n      dup2\n        /* \"#utility.yul\":88:109   */\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":83:86   */\n      dup3\n        /* \"#utility.yul\":76:110   */\n      mstore\n        /* \"#utility.yul\":7:116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":122:332   */\n    tag_8:\n        /* \"#utility.yul\":209:213   */\n      0x00\n        /* \"#utility.yul\":247:249   */\n      0x20\n        /* \"#utility.yul\":236:245   */\n      dup3\n        /* \"#utility.yul\":232:250   */\n      add\n        /* \"#utility.yul\":224:250   */\n      swap1\n      pop\n        /* \"#utility.yul\":260:325   */\n      tag_19\n        /* \"#utility.yul\":322:323   */\n      0x00\n        /* \"#utility.yul\":311:320   */\n      dup4\n        /* \"#utility.yul\":307:324   */\n      add\n        /* \"#utility.yul\":298:304   */\n      dup5\n        /* \"#utility.yul\":260:325   */\n      tag_14\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":122:332   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":338:428   */\n    tag_17:\n        /* \"#utility.yul\":372:379   */\n      0x00\n        /* \"#utility.yul\":415:420   */\n      dup2\n        /* \"#utility.yul\":408:421   */\n      iszero\n        /* \"#utility.yul\":401:422   */\n      iszero\n        /* \"#utility.yul\":390:422   */\n      swap1\n      pop\n        /* \"#utility.yul\":338:428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220141677a8bfd315fbbef039baaef97c84054250a03101aac60ff82307aa04929e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060e88061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80634fee737f146037578063dadf8fee146051575b600080fd5b603d6059565b60405160489190608d565b60405180910390f35b6057606d565b005b6000806000803b9150600082119250505090565b6000808082016040516004815250505050565b60878160a6565b82525050565b600060208201905060a060008301846080565b92915050565b6000811515905091905056fea2646970667358221220141677a8bfd315fbbef039baaef97c84054250a03101aac60ff82307aa04929e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE8 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4FEE737F EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xDADF8FEE EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x6D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 EXTCODESIZE SWAP2 POP PUSH1 0x0 DUP3 GT SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP3 ADD PUSH1 0x40 MLOAD PUSH1 0x4 DUP2 MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x87 DUP2 PUSH1 0xA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ AND PUSH24 0xA8BFD315FBBEF039BAAEF97C84054250A03101AAC60FF823 SMOD 0xAA DIV SWAP3 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "435:1174:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addToEVM2_29": {
									"entryPoint": 89,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@addToEVM_12": {
									"entryPoint": 109,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:431:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "83:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "103:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "88:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "76:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "76:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "54:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "61:3:1",
														"type": ""
													}
												],
												"src": "7:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "214:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "224:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "236:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "247:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "224:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "298:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "311:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "322:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "307:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "307:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "260:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "186:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "198:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "209:4:1",
														"type": ""
													}
												],
												"src": "122:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "380:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "390:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "415:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "408:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "408:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "401:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "390:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "362:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "372:7:1",
														"type": ""
													}
												],
												"src": "338:90:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c80634fee737f146037578063dadf8fee146051575b600080fd5b603d6059565b60405160489190608d565b60405180910390f35b6057606d565b005b6000806000803b9150600082119250505090565b6000808082016040516004815250505050565b60878160a6565b82525050565b600060208201905060a060008301846080565b92915050565b6000811515905091905056fea2646970667358221220141677a8bfd315fbbef039baaef97c84054250a03101aac60ff82307aa04929e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4FEE737F EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xDADF8FEE EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x6D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 EXTCODESIZE SWAP2 POP PUSH1 0x0 DUP3 GT SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP3 ADD PUSH1 0x40 MLOAD PUSH1 0x4 DUP2 MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x87 DUP2 PUSH1 0xA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ AND PUSH24 0xA8BFD315FBBEF039BAAEF97C84054250A03101AAC60FF823 SMOD 0xAA DIV SWAP3 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "435:1174:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1329:271;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;464:859;;;:::i;:::-;;1329:271;1371:12;1395:9;1415:12;1553:4;1541:17;1533:25;;1591:1;1586:4;:6;1579:13;;;;1329:271;:::o;464:859::-;509:6;526;885:1;882;878:9;1015:4;1009:11;1099:1;1097;1090:11;627:553;;;;464:859::o;7:109:1:-;88:21;103:5;88:21;:::i;:::-;83:3;76:34;7:109;;:::o;122:210::-;209:4;247:2;236:9;232:18;224:26;;260:65;322:1;311:9;307:17;298:6;260:65;:::i;:::-;122:210;;;;:::o;338:90::-;372:7;415:5;408:13;401:21;390:32;;338:90;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "46400",
								"executionCost": "99",
								"totalCost": "46499"
							},
							"external": {
								"addToEVM()": "188",
								"addToEVM2()": "2945"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 435,
									"end": 1609,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 1609,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220141677a8bfd315fbbef039baaef97c84054250a03101aac60ff82307aa04929e64736f6c63430008070033",
									".code": [
										{
											"begin": 435,
											"end": 1609,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "PUSH",
											"source": 0,
											"value": "4FEE737F"
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "PUSH",
											"source": 0,
											"value": "DADF8FEE"
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 1609,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 464,
											"end": 1323,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 464,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 464,
											"end": 1323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 464,
											"end": 1323,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 464,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 1323,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1558,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1591,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1590,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1592,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1600,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 464,
											"end": 1323,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 464,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 509,
											"end": 515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 885,
											"end": 886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 882,
											"end": 883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 878,
											"end": 887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1009,
											"end": 1020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1097,
											"end": 1098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 627,
											"end": 1180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 627,
											"end": 1180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 627,
											"end": 1180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 627,
											"end": 1180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 1323,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 103,
											"end": 108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 86,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 76,
											"end": 110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 122,
											"end": 332,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 122,
											"end": 332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 232,
											"end": 250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 224,
											"end": 250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 224,
											"end": 250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 260,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 322,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 307,
											"end": 324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 298,
											"end": 304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 260,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 260,
											"end": 325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 325,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 260,
											"end": 325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 338,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 338,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 372,
											"end": 379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 408,
											"end": 421,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 390,
											"end": 422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 390,
											"end": 422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addToEVM()": "dadf8fee",
							"addToEVM2()": "4fee737f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"addToEVM\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addToEVM2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Assemply-EVM-OpCodes.sol\":\"LearnAssembly\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Assemply-EVM-OpCodes.sol\":{\"keccak256\":\"0x5c9377b42e486d8efbda6a2adbf1aa2b349794f85bf8cf63857ecea1b02999ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25863f0064387b64547692f4a6313690786b47dbf1b896e409ced33ef23ffb3a\",\"dweb:/ipfs/QmNrCkgqp4GrV1Wj5eKnp42FoN1gugtv1xNE6aZkLyjoC5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Assemply-EVM-OpCodes.sol": {
				"ast": {
					"absolutePath": "Assemply-EVM-OpCodes.sol",
					"exportedSymbols": {
						"LearnAssembly": [
							30
						]
					},
					"id": 31,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 30,
							"linearizedBaseContracts": [
								30
							],
							"name": "LearnAssembly",
							"nameLocation": "444:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "498:825:0",
										"statements": [
											{
												"assignments": [
													5
												],
												"declarations": [
													{
														"constant": false,
														"id": 5,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "514:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 11,
														"src": "509:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "509:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 6,
												"nodeType": "VariableDeclarationStatement",
												"src": "509:6:0"
											},
											{
												"assignments": [
													8
												],
												"declarations": [
													{
														"constant": false,
														"id": 8,
														"mutability": "mutable",
														"name": "y",
														"nameLocation": "531:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 11,
														"src": "526:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 7,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "526:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 9,
												"nodeType": "VariableDeclarationStatement",
												"src": "526:6:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "627:553:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "869:18:0",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "882:1:0"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "885:1:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "878:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:9:0"
															},
															"variables": [
																{
																	"name": "z",
																	"nodeType": "YulTypedName",
																	"src": "873:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1000:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1015:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1009:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1009:11:0"
															},
															"variables": [
																{
																	"name": "a",
																	"nodeType": "YulTypedName",
																	"src": "1004:1:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "1097:1:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1099:1:0",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:11:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1090:11:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "882:1:0",
														"valueSize": 1
													},
													{
														"declaration": 8,
														"isOffset": false,
														"isSlot": false,
														"src": "885:1:0",
														"valueSize": 1
													}
												],
												"id": 10,
												"nodeType": "InlineAssembly",
												"src": "618:562:0"
											}
										]
									},
									"functionSelector": "dadf8fee",
									"id": 12,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addToEVM",
									"nameLocation": "473:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "481:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "498:0:0"
									},
									"scope": 30,
									"src": "464:859:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "1384:216:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1400:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 28,
														"src": "1395:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1395:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 19,
												"nodeType": "VariableDeclarationStatement",
												"src": "1395:9:0"
											},
											{
												"assignments": [
													21
												],
												"declarations": [
													{
														"constant": false,
														"id": 21,
														"mutability": "mutable",
														"name": "addr",
														"nameLocation": "1423:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 28,
														"src": "1415:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 20,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1415:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 22,
												"nodeType": "VariableDeclarationStatement",
												"src": "1415:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1518:51:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1533:25:0",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1541:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1541:17:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1533:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "1553:4:0",
														"valueSize": 1
													},
													{
														"declaration": 18,
														"isOffset": false,
														"isSlot": false,
														"src": "1533:4:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1509:60:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 24,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1586:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1591:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1586:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 16,
												"id": 27,
												"nodeType": "Return",
												"src": "1579:13:0"
											}
										]
									},
									"functionSelector": "4fee737f",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addToEVM2",
									"nameLocation": "1338:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1347:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1376:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1371:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1371:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1370:14:0"
									},
									"scope": 30,
									"src": "1329:271:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 31,
							"src": "435:1174:0",
							"usedErrors": []
						}
					],
					"src": "33:1578:0"
				},
				"id": 0
			}
		}
	}
}